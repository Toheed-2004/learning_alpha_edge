                 ; OVERLAP INDICATORS RULES
[BBANDS]
long = (df["BB_middle"] > df["BB_lower"]) & (df["BB_middle"].shift(1) <= df["BB_lower"].shift(1))
short = (df["BB_middle"] < df["BB_upper"]) & (df["BB_middle"].shift(1) >= df["BB_upper"].shift(1))

[DEMA]
long = df["DEMA_20"] > df["DEMA_20"].shift(1)
short = df["DEMA_20"] < df["DEMA_20"].shift(1)

[EMA]
long = df["EMA_20"] > df["EMA_20"].shift(1)
short = df["EMA_20"] < df["EMA_20"].shift(1)

[HT_TRENDLINE]
long = df["HT_Trendline"] > df["HT_Trendline"].shift(1)
short = df["HT_Trendline"] < df["HT_Trendline"].shift(1)

[KAMA]
long = df["KAMA_20"] > df["KAMA_20"].shift(1)
short = df["KAMA_20"] < df["KAMA_20"].shift(1)

[MA]
long = df["MA"] > df["MA"].shift(1)
short = df["MA"] < df["MA"].shift(1)

[MAMA]
long = df["MAMA"] > df["FAMA"]
short = df["MAMA"] < df["FAMA"]

[MAVP]
long = df["MAVP"] > df["MAVP"].shift(1)
short = df["MAVP"] < df["MAVP"].shift(1)

[MIDPOINT]
long = df["MidPoint"] > df["MidPoint"].shift(1)
short = df["MidPoint"] < df["MidPoint"].shift(1)

[MIDPRICE]
long = df["MidPrice"] > df["MidPrice"].shift(1)
short = df["MidPrice"] < df["MidPrice"].shift(1)

[SAR]
long = df["SAR"] < df["Close"]
short = df["SAR"] > df["Close"]

[SAREXT]
long = df["SAREXT"] < df["Close"]
short = df["SAREXT"] > df["Close"]

[SMA]
long = df["SMA_20"] > df["SMA_20"].shift(1)
short = df["SMA_20"] < df["SMA_20"].shift(1)

[T3]
long = df["T3_20"] > df["T3_20"].shift(1)
short = df["T3_20"] < df["T3_20"].shift(1)

[TEMA]
long = df["TEMA_20"] > df["TEMA_20"].shift(1)
short = df["TEMA_20"] < df["TEMA_20"].shift(1)

[TRIMA]
long = df["TRIMA_20"] > df["TRIMA_20"].shift(1)
short = df["TRIMA_20"] < df["TRIMA_20"].shift(1)

[WMA]
long = df["WMA_20"] > df["WMA_20"].shift(1)
short = df["WMA_20"] < df["WMA_20"].shift(1)
# === Momentum Indicators ===
[adx]
long = ADX_14 > 25
short = ADX_14 < 20

[adxr]
long = ADXR_14 > 25
short = ADXR_14 < 20

[apo]
long = APO > 0
short = APO < 0

[aroon]
long = AROON_up > 70 and AROON_down < 30
short = AROON_down > 70 and AROON_up < 30

[aroonosc]
long = AROONOSC > 50
short = AROONOSC < -50

[bop]
long = BOP > 0.5
short = BOP < -0.5

[cci]
long = CCI_14 > 100
short = CCI_14 < -100

[cmo]
long = CMO_14 > 50
short = CMO_14 < -50

[dx]
long = DX > 20
short = DX < 20

[macd]
long = MACD > MACD_signal
short = MACD < MACD_signal

[macdext]
long = MACDEXT > MACDEXT_signal
short = MACDEXT < MACDEXT_signal

[macdfix]
long = MACDFIX > MACDFIX_signal
short = MACDFIX < MACDFIX_signal

[mfi]
long = MFI_14 < 20
short = MFI_14 > 80

[minus_di]
long = PLUS_DI > MINUS_DI
short = MINUS_DI > PLUS_DI

[minus_dm]
long = PLUS_DM > MINUS_DM
short = MINUS_DM > PLUS_DM

[mom]
long = MOM_10 > 0
short = MOM_10 < 0

[plus_di]
long = PLUS_DI > 25
short = PLUS_DI < 20

[plus_dm]
long = PLUS_DM > 25
short = PLUS_DM < 20

[ppo]
long = PPO > 0
short = PPO < 0

[roc]
long = ROC > 0
short = ROC < 0

[rocp]
long = ROCP > 0
short = ROCP < 0

[rocr]
long = ROCR > 1
short = ROCR < 1

[rocr100]
long = ROCR100 > 100
short = ROCR100 < 100

[rsi]
long = RSI_14 < 30
short = RSI_14 > 70

[stoch]
long = STOCH_k > STOCH_d and STOCH_k < 20
short = STOCH_k < STOCH_d and STOCH_k > 80

[stochf]
long = STOCHF_k > STOCHF_d and STOCHF_k < 20
short = STOCHF_k < STOCHF_d and STOCHF_k > 80

[stochrsi]
long = STOCHRSI_k > STOCHRSI_d and STOCHRSI_k < 20
short = STOCHRSI_k < STOCHRSI_d and STOCHRSI_k > 80

[trix]
long = TRIX > 0
short = TRIX < 0

[ultosc]
long = ULTOSC < 30
short = ULTOSC > 70

[willr]
long = WILLR < -80
short = WILLR > -20
;Volume Indicators rules
[ad]
long = AD > AD.shift(1)
short = AD < AD.shift(1)

[adosc]
long = ADOSC > ADOSC.shift(1)
short = ADOSC < ADOSC.shift(1)

[obv]
long = OBV > OBV.shift(1)
short = OBV < OBV.shift(1)

;Cycle Indicators

[ht_dcperiod]
long = diff(HT_DCPERIOD) > 2
short = diff(HT_DCPERIOD) < -2

[ht_dcphase]
long = diff(HT_DCPHASE) < -300
short = false

# HT_PHASOR: Long if inphase crosses above quadrature, Short if below
[ht_phasor]
long = crossover(HT_PHASOR_inphase, HT_PHASOR_quadrature)
short = crossunder(HT_PHASOR_inphase, HT_PHASOR_quadrature)

# HT_SINE: Long if sine crosses above leadsine, Short if below
[ht_sine]
long = crossover(HT_SINE_sine, HT_SINE_leadsine)
short = crossunder(HT_SINE_sine, HT_SINE_leadsine)

# HT_TRENDMODE: Long if entering trend, Short if exiting
[ht_trendmode]
long = HT_TRENDMODE == 1 and shift(HT_TRENDMODE, 1) == 0
short = HT_TRENDMODE == 0 and shift(HT_TRENDMODE, 1) == 1

;price_transform_indicators

# AVGPRICE: Long if it crosses above its own 10-period EMA, Short if below
[avgprice]
long = crossover(AVGPRICE, EMA(AVGPRICE, 10))
short = crossunder(AVGPRICE, EMA(AVGPRICE, 10))

[medprice]
long = diff(MEDPRICE) > 0.5
short = diff(MEDPRICE) < -0.5

[typprice]
long = crossover(TYPPRICE, SMA(TYPPRICE, 10))
short = crossunder(TYPPRICE, SMA(TYPPRICE, 10))

[wclprice]
long = (diff(WCLPRICE) > 0) & (diff(WCLPRICE, 2) > 0)
short = (diff(WCLPRICE) < 0) & (diff(WCLPRICE, 2) < 0)

[atr]
long = ATR_14 > SMA(ATR_14, 14)
short = ATR_14 < SMA(ATR_14, 14)

[natr]
long = NATR_14 > SMA(NATR_14, 10)
short = NATR_14 < SMA(NATR_14, 10)

[trange]
long = TRANGE > SMA(TRANGE, 10) + STDDEV(TRANGE, 10)
short = TRANGE < SMA(TRANGE, 10) - STDDEV(TRANGE, 10)

[cdl2crows]
long = 0
short = CDL2CROWS == -100

[cdl3blackcrows]
long = 0
short = CDL3BLACKCROWS == -100

[cdl3inside]
long = CDL3INSIDE == 100
short = CDL3INSIDE == -100

[cdl3linestrike]
long = CDL3LINESTRIKE == 100
short = CDL3LINESTRIKE == -100

[cdl3outside]
long = CDL3OUTSIDE == 100
short = CDL3OUTSIDE == -100

[cdl3starsinsouth]
long = CDL3STARSINSOUTH == 100
short = 0

[cdl3whitesoldiers]
long = CDL3WHITESOLDIERS == 100
short = 0

[cdlabandonedbaby]
long = CDLABANDONEDBABY == 100
short = CDLABANDONEDBABY == -100

[cdladvanceblock]
long = 0
short = CDLADVANCEBLOCK == -100

[cdlbelthold]
long = CDLBELTHOLD == 100
short = CDLBELTHOLD == -100

[cdlbreakaway]
long = CDLBREAKAWAY == 100
short = CDLBREAKAWAY == -100

[cdlclosingmarubozu]
long = CDLCLOSINGMARUBOZU == 100
short = CDLCLOSINGMARUBOZU == -100

[cdlconcealbabyswall]
long = CDLCONCEALBABYSWALL == 100
short = 0

[cdlcounterattack]
long = CDLCOUNTERATTACK == 100
short = CDLCOUNTERATTACK == -100

[cdldarkcloudcover]
long = 0
short = CDLDARKCLOUDCOVER == -100

[cdldoji]
long = 0
short = 0

[cdldojistar]
long = CDLDOJISTAR == 100
short = CDLDOJISTAR == -100

[cdldragonflydoji]
long = CDLDRAGONFLYDOJI == 100
short = 0

[cdlengulfing]
long = CDLENGULFING == 100
short = CDLENGULFING == -100

[cdleveningdojistar]
long = 0
short = CDLEVENINGDOJISTAR == -100

[cdleveningstar]
long = 0
short = CDLEVENINGSTAR == -100

[cdlgapsidesidewhite]
long = CDLGAPSIDESIDEWHITE == 100
short = 0

[cdlgravestonedoji]
long = 0
short = CDLGRAVESTONEDOJI == -100

[cdlhammer]
long = CDLHAMMER == 100
short = 0

[cdlhangingman]
long = 0
short = CDLHANGINGMAN == -100

[cdlharami]
long = CDLHARAMI == 100
short = CDLHARAMI == -100

[cdlharamicross]
long = CDLHARAMICROSS == 100
short = CDLHARAMICROSS == -100

[cdlhighwave]
long = CDLHIGHWAVE == 100
short = CDLHIGHWAVE == -100

[cdlhikkake]
long = CDLHIKKAKE == 100
short = CDLHIKKAKE == -100

[cdlhikkakemod]
long = CDLHIKKAKEMOD == 100
short = CDLHIKKAKEMOD == -100

[cdlhomingpigeon]
long = CDLHOMINGPIGEON == 100
short = 0

[cdlidentical3crows]
long = 0
short = CDLIDENTICAL3CROWS == -100

[cdlinneck]
long = 0
short = CDLINNECK == -100

[cdlinvertedhammer]
long = CDLINVERTEDHAMMER == 100
short = 0

[cdlkicking]
long = CDLKICKING == 100
short = CDLKICKING == -100

[cdlkickingbylength]
long = CDLKICKINGBYLENGTH == 100
short = CDLKICKINGBYLENGTH == -100

[cdlladderbottom]
long = CDLLADDERBOTTOM == 100
short = 0

[cdllongleggeddoji]
long = CDLLONGLEGGEDDOJI == 100
short = CDLLONGLEGGEDDOJI == -100

[cdllongline]
long = CDLLONGLINE == 100
short = CDLLONGLINE == -100

[cdlmarubozu]
long = CDLMARUBOZU == 100
short = CDLMARUBOZU == -100

[cdlmatchinglow]
long = CDLMATCHINGLOW == 100
short = 0

[cdlmathold]
long = CDLMATHOLD == 100
short = CDLMATHOLD == -100

[cdlmorningdojistar]
long = CDLMORNINGDOJISTAR == 100
short = 0

[cdlmorningstar]
long = CDLMORNINGSTAR == 100
short = 0

[cdlonneck]
long = 0
short = CDLONNECK == -100

[cdlpiercing]
long = CDLPIERCING == 100
short = 0

[cdlrickshawman]
long = CDLRICKSHAWMAN == 100
short = CDLRICKSHAWMAN == -100

[cdlrisefall3methods]
long = CDLRISEFALL3METHODS == 100
short = CDLRISEFALL3METHODS == -100

[cdlseparatinglines]
long = CDLSEPARATINGLINES == 100
short = CDLSEPARATINGLINES == -100

[cdlshootingstar]
long = 0
short = CDLSHOOTINGSTAR == -100

[cdlshortline]
long = CDLSHORTLINE == 100
short = CDLSHORTLINE == -100

[cdlspinningtop]
long = CDLSPINNINGTOP == 100
short = CDLSPINNINGTOP == -100

[cdlstalledpattern]
long = CDLSTALLEDPATTERN == 100
short = CDLSTALLEDPATTERN == -100

[cdlsticksandwich]
long = CDLSTICKSANDWICH == 100
short = 0

[cdltakuri]
long = CDLTAKURI == 100
short = 0

[cdltasukigap]
long = CDLTASUKIGAP == 100
short = CDLTASUKIGAP == -100

[cdlthrusting]
long = 0
short = CDLTHRUSTING == -100

[cdltristar]
long = CDLTRISTAR == 100
short = CDLTRISTAR == -100

[cdlunique3river]
long = CDLUNIQUE3RIVER == 100
short = 0

[cdlupsidegap2crows]
long = 0
short = CDLUPSIDEGAP2CROWS == -100

[cdlxsidegap3methods]
long = CDLXSIDEGAP3METHODS == 100
short = CDLXSIDEGAP3METHODS == -100

[beta]
long = BETA > BETA.shift(1)
short = BETA < BETA.shift(1)

[correl]
long = CORREL > 0.5
short = CORREL < -0.5

[linearreg]
long = LINEARREG > LINEARREG.shift(1)
short = LINEARREG < LINEARREG.shift(1)

[linearreg_angle]
long = LINEARREG_ANGLE > 0
short = LINEARREG_ANGLE < 0

[linearreg_intercept]
long = LINEARREG_INTERCEPT > LINEARREG_INTERCEPT.shift(1)
short = LINEARREG_INTERCEPT < LINEARREG_INTERCEPT.shift(1)

[linearreg_slope]
long = LINEARREG_SLOPE > 0
short = LINEARREG_SLOPE < 0

[stddev]
long = STDDEV > STDDEV.rolling(10).mean()
short = STDDEV < STDDEV.rolling(10).mean()

[tsf]
long = TSF > TSF.shift(1)
short = TSF < TSF.shift(1)

[var]
long = VAR > VAR.rolling(10).mean()
short = VAR < VAR.rolling(10).mean()



